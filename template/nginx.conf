worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;

events {
    worker_connections  100;
}


http {
	lua_package_path './lua/?.lua;./lua/packages/?.lua;;';
	lua_code_cache off; # for dev

	upstream backend {
		server {{key "config/nginx-gateway/upstream-host"}};
	}

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$http_x_forwarded_for"';

	#access_log  logs/access.log  main;
	sendfile on;
	keepalive_timeout  65;
	gzip  on;

	server {
		listen       8089;
		server_name  localhost;

		# curl -H 'X-Wikia-Auth: fooooo' -v http://localhost:8089/direct/2
		location ~ /direct/(\d+) {
			resolver 10.8.34.90;
			set $userid $1;
			content_by_lua '
				local net = require "net"

				local request_headers = ngx.req.get_headers(20)

				local reqfn = function() 
					local auth = require "auth"
					return auth.authenticated_get("http://api.wikia-services.com/user-preference/preferences/" .. ngx.var.userid .. "/global", request_headers["X-Wikia-Auth"], {}, "https://id.wikia-services.com/info")
				end
				net.handle(reqfn)
				';
		}

		
		## experiments ###
		location ~ ^/internal-preferences/(\d+) {
			internal;
			proxy_set_header Host "{{key "config/nginx-gateway/upstream-host"}}";
			proxy_pass http://backend/user-preference/preferences/$1/global;
		}

		location ~ ^/lua/preferences/(\d+) {
			proxy_set_header Host "{{key "config/nginx-gateway/upstream-host"}}";
			set $userid $1;
			content_by_lua_file lua/user-preferences.lua;
		}

	
		# I'm not sure that this will work as we expect. We will need to contact helios with the token,
		# get the user id, then pass that user id as a header to the request to the backend service(s)
		location ~ ^/access_by/(\d+) {
			proxy_set_header Host "{{key "config/nginx-gateway/upstream-host"}}";
			set $userid $1;
			access_by_lua_file lua/session_auth.lua;
			proxy_set_header X-Wikia-User $userid;
			proxy_pass http://backend/user-preference/preferences/$1/global;
		}


		location / {
			root static;
			index index.html greeting.txt;
		}

		location /auth {
			content_by_lua_file lua/mock_auth.lua;
		}


	}
}
